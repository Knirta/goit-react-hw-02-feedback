{"version":3,"sources":["components/container/Container.js","components/description/Description.js","components/options/Options.js","components/feedback/Feedback.js","components/notification/Notification.js","App.js","index.js","components/options/Options.module.css","components/feedback/Feedback.module.css","components/container/Container.module.css"],"names":["Container","children","className","s","Description","Options","options","onLeaveFeedback","total","onReset","Wrap","map","option","type","Option","onClick","Feedback","feedbacks","positivePercentage","name","voices","Text","Notification","App","useState","window","localStorage","getItem","JSON","parse","good","neutral","bad","setFeedbacks","useEffect","setItem","stringify","countTotalFeedback","Object","values","reduce","acc","curr","keys","feedbackItems","entries","percentage","parseInt","countPositiveFeedbackPercentage","prevState","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"iQAYeA,EARG,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACnB,OAAO,qBAAKC,UAAWC,IAAEH,UAAlB,SAA8BC,KCOxBG,EAZK,WAClB,OACE,qCACE,qDACA,wH,gBC4BSC,EA5BC,SAAC,GAAkD,IAAhDC,EAA+C,EAA/CA,QAASC,EAAsC,EAAtCA,gBAAiBC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,QAClD,OACE,sBAAKP,UAAWC,IAAEO,KAAlB,UACGJ,EAAQK,KAAI,SAACC,GACZ,OACE,wBAEEC,KAAK,SACLX,UAAWC,IAAEW,OACbC,QAAS,kBAAMR,EAAgBK,IAJjC,SAMGA,GALIA,MASVJ,EAAQ,GACP,wBAAQN,UAAWC,IAAEW,OAAQC,QAASN,EAAtC,uB,gBCMOO,EAtBE,SAAC,GAA8C,IAA5CC,EAA2C,EAA3CA,UAAWT,EAAgC,EAAhCA,MAAOU,EAAyB,EAAzBA,mBACpC,OACE,qCACGD,EAAUN,KAAI,YAAqB,IAAD,mBAAlBQ,EAAkB,KAAZC,EAAY,KACjC,OACE,oBAAclB,UAAWC,IAAEkB,KAA3B,UACGF,EADH,KACU,+BAAOC,MADTD,MAKZ,oBAAGjB,UAAWC,IAAEkB,KAAhB,oBAA8Bb,KAC9B,oBAAGN,UAAWC,IAAEkB,KAAhB,iCAA2CH,EAA3C,WCPSI,EANM,SAAC,GAAD,IAAGrB,EAAH,EAAGA,SAAH,OAAkB,4BAAIA,KC+D5BsB,EA1DH,WACV,MAAgCC,oBAAS,WACvC,IAAIP,EAAYQ,OAAOC,aAAaC,QAAQ,aAC5C,OAAIV,EAAkBW,KAAKC,MAAMZ,GAE1B,CAAEa,KAAM,EAAGC,QAAS,EAAGC,IAAK,MAJrC,mBAAKf,EAAL,KAAgBgB,EAAhB,KAOAC,qBAAU,WACRT,OAAOC,aAAaS,QAAQ,YAAaP,KAAKQ,UAAUnB,MACvD,CAACA,IAEJ,IAWIoB,EAAqB,kBACvBC,OAAOC,OAAOtB,GAAWuB,QAAO,SAACC,EAAKC,GAAN,OAAeD,EAAMC,IAAM,IAQvDpC,EAAUgC,OAAOK,KAAK1B,GACtB2B,EAAgBN,OAAOO,QAAQ5B,GAC/BT,EAAQ6B,IACRnB,EATgC,WACpC,IAAMV,EAAQ6B,IACRS,EAAaC,SAAU9B,EAAUa,KAAOtB,EAAS,KACvD,OAAOA,EAAQsC,EAAa,EAMHE,GAC3B,OACE,eAAC,EAAD,WACE,cAAC,EAAD,IACA,cAAC,EAAD,CACE1C,QAASA,EACTC,gBA7BS,SAACK,GACdqB,GAAa,SAACgB,GAAD,mBAAC,eACThC,GADQ,kBAEVL,EAASqC,EAAUrC,GAAU,QA2B5BJ,MAAOA,EACPC,QAxBM,WACVwB,EAAa,CAAEH,KAAM,EAAGC,QAAS,EAAGC,IAAK,OAyBtCxB,EACC,cAAC,EAAD,CACES,UAAW2B,EACXpC,MAAOA,EACPU,mBAAoBA,IAGtB,cAAC,EAAD,kCCtDRgC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,OAAS,wBAAwB,KAAO,wB,kBCA1DD,EAAOC,QAAU,CAAC,KAAO,yB,kBCAzBD,EAAOC,QAAU,CAAC,UAAY,gC","file":"static/js/main.f5e70b59.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./Container.module.css\";\n\nconst Container = ({ children }) => {\n  return <div className={s.Container}>{children}</div>;\n};\n\nContainer.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default Container;\n","const Description = () => {\n  return (\n    <>\n      <h1>Sip Happens Caf√©</h1>\n      <p>\n        Please leave your feedback about our service by selecting one of the\n        options below.\n      </p>\n    </>\n  );\n};\n\nexport default Description;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./Options.module.css\";\n\nconst Options = ({ options, onLeaveFeedback, total, onReset }) => {\n  return (\n    <div className={s.Wrap}>\n      {options.map((option) => {\n        return (\n          <button\n            key={option}\n            type=\"button\"\n            className={s.Option}\n            onClick={() => onLeaveFeedback(option)}\n          >\n            {option}\n          </button>\n        );\n      })}\n      {total > 0 && (\n        <button className={s.Option} onClick={onReset}>\n          Reset\n        </button>\n      )}\n    </div>\n  );\n};\n\nOptions.propTypes = {\n  options: PropTypes.array.isRequired,\n};\n\nexport default Options;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./Feedback.module.css\";\n\nconst Feedback = ({ feedbacks, total, positivePercentage }) => {\n  return (\n    <>\n      {feedbacks.map(([name, voices]) => {\n        return (\n          <p key={name} className={s.Text}>\n            {name}: <span>{voices}</span>\n          </p>\n        );\n      })}\n      <p className={s.Text}>Total: {total}</p>\n      <p className={s.Text}>Positive feedbacks: {positivePercentage}%</p>\n    </>\n  );\n};\n\nFeedback.propTypes = {\n  feedbacks: PropTypes.array.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Feedback;\n","import PropTypes from \"prop-types\";\n\nconst Notification = ({ children }) => <p>{children}</p>;\n\nNotification.propTypes = {\n  children: PropTypes.string,\n};\n\nexport default Notification;\n","import { useState, useEffect } from \"react\";\nimport Container from \"./components/container\";\nimport Description from \"./components/description\";\nimport Options from \"./components/options\";\nimport Feedback from \"./components/feedback\";\nimport Notification from \"./components/notification\";\n\nconst App = () => {\n  let [feedbacks, setFeedbacks] = useState(() => {\n    let feedbacks = window.localStorage.getItem(\"feedbacks\");\n    if (feedbacks) return JSON.parse(feedbacks);\n\n    return { good: 0, neutral: 0, bad: 0 };\n  });\n\n  useEffect(() => {\n    window.localStorage.setItem(\"feedbacks\", JSON.stringify(feedbacks));\n  }, [feedbacks]);\n\n  let addVoice = (option) => {\n    setFeedbacks((prevState) => ({\n      ...feedbacks,\n      [option]: prevState[option] + 1,\n    }));\n  };\n\n  let reset = () => {\n    setFeedbacks({ good: 0, neutral: 0, bad: 0 });\n  };\n\n  let countTotalFeedback = () =>\n    Object.values(feedbacks).reduce((acc, curr) => acc + curr, 0);\n\n  let countPositiveFeedbackPercentage = () => {\n    const total = countTotalFeedback();\n    const percentage = parseInt((feedbacks.good / total) * 100);\n    return total ? percentage : 0;\n  };\n\n  const options = Object.keys(feedbacks);\n  const feedbackItems = Object.entries(feedbacks);\n  const total = countTotalFeedback();\n  const positivePercentage = countPositiveFeedbackPercentage();\n  return (\n    <Container>\n      <Description />\n      <Options\n        options={options}\n        onLeaveFeedback={addVoice}\n        total={total}\n        onReset={reset}\n      />\n      {total ? (\n        <Feedback\n          feedbacks={feedbackItems}\n          total={total}\n          positivePercentage={positivePercentage}\n        />\n      ) : (\n        <Notification>No feedback yet</Notification>\n      )}\n    </Container>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Option\":\"Options_Option__3v04M\",\"Wrap\":\"Options_Wrap__2P1t9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Text\":\"Feedback_Text__1qah8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__wJ-3l\"};"],"sourceRoot":""}